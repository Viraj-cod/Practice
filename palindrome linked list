class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        
def rev(lst):
    temp = lst.copy()
    val = len(temp)-1
    for i in lst:
        temp[val] = i
        val= val - 1
    return temp
    
class linkedlist:
    def __init__(self):
        self.head = None
    
    def add(self,val):
        new  = Node(val)
        if self.head == None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next =new
        
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end='->')
            temp = temp.next
        print('None')
    
    def pal(self):
        temp = []
        ele = self.head
        while ele is not None:
            temp.append(ele.data)
            ele = ele.next
        palindrome = rev(temp) 
        return temp == palindrome
        
if __name__ == '__main__':
    ll = linkedlist()
    ll.add(1)
    ll.add(2)
    ll.add(1)
    ll.add(1)
    ll.add(2)
    ll.add(1)
    #ll.display()
    print(ll.pal())
