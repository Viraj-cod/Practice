class node:
    def __init__(self,val):
        self.val=val
        self.next = None

class linkedlist:
    def __init__(self,val):
        new=node(val)
        self.head=new
        self.tail=new
        self.length=1
    
    def prepend(self,val):
        new=node(val)
        if self.head is None:
            self.head=new
            self.tail=new
            return True
        new.next=self.head
        self.head=new
        self.length+=1
        return True
    
    def append(self,val):
        new=node(val)
        if self.length==0:
            self.head=new
            self.tail=new
            return True
        self.tail.next=new
        self.tail = new
        self.length+=1
        return True
    
    def dis(self):
        temp=self.head
        while temp:
            print(temp.val,end='->')
            temp=temp.next
        print(None)
    
    def get(self,ind):
        if ind<0 or self.length <= ind:
            return False
        temp=self.head
        for i in range(ind):
            temp=temp.next
        return temp
        
    def insert(self,ind,val):
        if ind < 0 or ind > self.length:
            return False
        new=node(val)
        if self.length == 0:
            return self.prepend(val)
        elif ind==self.length:
            return self.append(val)
        temp = self.get(ind-1)
        new.next=temp.next
        temp.next=new
        self.length+=1
        return True
            
    def reverse(self):
        temp=self.head
        self.head,self.tail=self.tail,self.head
        after=temp.next
        before=None
        for _ in range(self.length):
            after=temp.next
            temp.next=before
            before = temp
            temp=after
        self.dis()
        
ll=linkedlist(6)
ll.append(8)
ll.prepend(7)
ll.insert(3,4)
ll.insert(1,3)
ll.dis()
ll.reverse()
        
