class node:
    def __init__(self,data):
        self.data = data
        self.next = None

class ll:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = node(val)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end='->')
            temp = temp.next
        print('None')
    
    def count(self):
        temp = self.head
        cnt = 0
        while temp is not None:
            temp = temp.next
            cnt+=1
        return cnt
    
    def rev(self):
        c = self.count()-1
        temp = self.head
        while temp.next is not None:
            k=c
            temp2= temp
            while k > 0:
                temp2 = temp2.next
                k-=1
            if temp.data != temp2.data :
                return False
            c -= 2
            temp = temp.next
        self.display()
        return True
        
k=[1,3,2,2,3,4,1]
lst = ll()
for i in k:
    lst.insert(i)
lst.display()
if lst.rev():
    print('Yes linked list is palindrome!')
else:
    print('No linked list is not palindrome in nature')
        
