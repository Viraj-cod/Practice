class node:
    def __init__(self,data):
        self.data = data
        self.next = None

class linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = node(val)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end = '->')
            temp = temp.next
        print(None)
    
    def rem_first(self):
        self.head = self.head.next
    
def rot(ll,num):
    #temp = ll.head
    for i in range(num):
        dt = ll.head.data
        ll.insert(dt)
        ll.rem_first()
        
    ll.display()

def main():
    inp = list(map(int,input("Enter the linked list elements:").split()))
    rt = int(input("enter the rotations:"))
    ll = linkedlist()
    for i in inp:
        ll.insert(i)
    ll.display()
    rot(ll,rt)
    
if __name__ == '__main__':
    main()
